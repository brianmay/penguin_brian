---
layout: talk
title: Linux for the blind
conference: /conferences/2010/02/02/LUV/
speaker: Jason
begin: 2008-08-05 19:00
---
Firefox 3 and auto screen reader.

Research into making X-Windows accessible dates back to the 80's. They couldn't
get enough information from the specifications. Use undocumented features to
try and find out what applications where doing in order to make off screen
model for presenting to user. Off screen model was often not accurate. A better
system was needed.

Attempt to make Mac OS X accessible in the 90's via an accessible API.

Sun designed accessible API for Java, now available under the GPL.

C API rewritten in Python. Completely script basis. Exposes details for user
interface. User interface library needs to support accessibility infrastructure
and pass on relevant events. Implemented in Gnome libraries. Implemented within
Mozilla. Mozilla supports different accessibility APIs depending on the OS where
it is being used.

ATSPI

Communicate via IPC. Corba.

Plan to integrate with dbus.

Planned for QT4 and KDE. No working implementation yet.

Speech synthesis library

Braille display.

Screen magnifier.

Keyboard accessibility - impractical to use pointing device if you can't see
the display. Needs to be done by the individual application.

40 character Braille display $8500. Very small market.

Javascript becoming increasingly complicated, text mode browsers such as w3m,
links, lynx, etc are not sufficient.

It is not clear from DOM model what is going on and how to convey that in
speech or Braille. Back to the original problem we started off with.

Same solution for the web. Standards. WAI-ARIA. Accessible Rich Internet
Applications W3C working draft. Attributes to describe extra information
required for accessibility. Attributes map directly to API.

Dynamically changing HTML documents. It isn't clear what is going on. When
document changes are finished, and what these changes in state mean. Attributes
provide state information, and notification of state changes, and relevance of
regions that are getting updated without focus.

HTML 5 omits a number of important attributes required for accessibility.
Source on contention between working groups in W3C.

Attempt to improve efficiency of users. May not be possible to make a graphical
environment optimal for all users but it should be possibble to improve the
experience.

How to ensure sites are created and accessible? With laws and with dedicated
people who want to do it.

Content management systems: If HTML is written by hand and complies with
standard, it is better then autogenerated HTML from content management system.
<https://ATutoror.ca/> written by accessibility experts.

Is this helping or hurting? Is technology being purchased at great expense just
to keep people in a job. Money is often mispent.

Captchas: accessibility obstacle. Maths questions can be read out. Visual
things can be scanned automatically with OCR. Yes, this defeats the point of
using captchas.

